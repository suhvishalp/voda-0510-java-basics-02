package com.demo.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.demo.entities.DepartmentDto;
import com.demo.entities.EmpResponseDto;
import com.demo.entities.Employee;
import com.demo.entities.EmployeeDto;
import com.demo.entities.EmployeeMapper;
import com.demo.repositories.EmployeeRepository;

@Service
public class EmployeeService {

	@Autowired
    private EmployeeRepository employeeRepository;
	
	@Autowired
	private WebClient webClient;
	
	
	@Autowired
	private DepartmentAPIClient deptApiClient;
	
    

    public EmployeeDto saveEmployee(EmployeeDto employeeDto) {

        Employee employee = EmployeeMapper.mapToEmployee(employeeDto);

        Employee saveDEmployee = employeeRepository.save(employee);

        EmployeeDto savedEmployeeDto = EmployeeMapper.mapToEmployeeDto(saveDEmployee);

        return savedEmployeeDto;
    }

//    public EmpResponseDto getEmployeeById(Long employeeId) {
//
//        Employee employee = employeeRepository.findById(employeeId).get();
//
//        String departmentCode = employee.getDepartmentCode();
//        
//        //Make HTTP GET request to localhost:8081/api/departments/+deptCode
//        RestTemplate restTemplate = new RestTemplate();
//        ResponseEntity<DepartmentDto> responseEntity = restTemplate.getForEntity("http://localhost:8081/api/departments/"+departmentCode, DepartmentDto.class);
//
//        DepartmentDto departmentDto = responseEntity.getBody();
//        
//        EmpResponseDto empResponseDto = new EmpResponseDto();
//        empResponseDto.setDeptDto(departmentDto);
//        
//        EmployeeDto employeeDto = EmployeeMapper.mapToEmployeeDto(employee);
//
//        empResponseDto.setEmpDto(employeeDto);
//        
//       return empResponseDto;
//    }
    
//    public EmpResponseDto getEmployeeById(Long employeeId) {
//
//        Employee employee = employeeRepository.findById(employeeId).get();
//
//        String departmentCode = employee.getDepartmentCode();
//        
//        //Make HTTP GET request to http://localhost:8081/api/departments/"+departmentCode
//        DepartmentDto departmentDto =  webClient.get()
//        	.uri("http://localhost:8081/api/departments/"+departmentCode)
//        	.retrieve()
//        	.bodyToMono(DepartmentDto.class)
//        	.block();
//        
//        
//        EmpResponseDto empResponseDto = new EmpResponseDto();
//        empResponseDto.setDeptDto(departmentDto);
//        
//        EmployeeDto employeeDto = EmployeeMapper.mapToEmployeeDto(employee);
//
//        empResponseDto.setEmpDto(employeeDto);
//        
//       return empResponseDto;
//    }
    
    public EmpResponseDto getEmployeeById(Long employeeId) {

        Employee employee = employeeRepository.findById(employeeId).get();

        String departmentCode = employee.getDepartmentCode();
        
        ResponseEntity<DepartmentDto> responseDeptDto = deptApiClient.getDepartment(departmentCode);
        
        DepartmentDto deptDto = responseDeptDto.getBody();
        
        EmpResponseDto empResponseDto = new EmpResponseDto();
        empResponseDto.setDeptDto(deptDto);
        
        EmployeeDto employeeDto = EmployeeMapper.mapToEmployeeDto(employee);

        empResponseDto.setEmpDto(employeeDto);
        
       return empResponseDto;
    }
    
    public EmpResponseDto getEmployeeByIdFallback(Long employeeId) {

        Employee employee = employeeRepository.findById(employeeId).get();
//
//        String departmentCode = employee.getDepartmentCode();
//        
//        ResponseEntity<DepartmentDto> responseDeptDto = deptApiClient.getDepartment(departmentCode);
//        
//        DepartmentDto deptDto = responseDeptDto.getBody();
//        
        EmpResponseDto empResponseDto = new EmpResponseDto();
        empResponseDto.setDeptDto(null);
        
        EmployeeDto employeeDto = EmployeeMapper.mapToEmployeeDto(employee);

        empResponseDto.setEmpDto(employeeDto);
        
       return empResponseDto;
    }

    
}